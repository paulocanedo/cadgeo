/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MagneticPanel.java
 *
 * Created on 04/10/2011, 11:36:57
 */
package br.com.geomapa.controller;

import java.awt.Dialog;
import java.awt.event.ItemEvent;

/**
 *
 * @author paulocanedo
 */
public class MagneticPanel extends javax.swing.JPanel {
    
    private Dialog dialog;

    /** Creates new form MagneticPanel */
    public MagneticPanel() {
        initComponents();
    }
    
    public MagneticPanel(Dialog dialog) {
        initComponents();
        
        endpointField.setSelected(true);
        pointField.setSelected(true);
        intersectionField.setSelected(true);
        activeField.setSelected(true);
        this.dialog = dialog;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        endpointField = new javax.swing.JCheckBox();
        pointField = new javax.swing.JCheckBox();
        activeField = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        intersectionField = new javax.swing.JCheckBox();

        endpointField.setText("Final da linha");
        endpointField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                endpointFieldItemStateChanged(evt);
            }
        });

        pointField.setText("Centro do ponto");
        pointField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pointFieldItemStateChanged(evt);
            }
        });

        activeField.setText("Ligado");
        activeField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                activeFieldItemStateChanged(evt);
            }
        });

        jButton1.setText("Fechar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        intersectionField.setText("Intersecção");
        intersectionField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                intersectionFieldItemStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(endpointField)
                    .add(pointField)
                    .add(jButton1)
                    .add(activeField)
                    .add(intersectionField))
                .addContainerGap(248, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(endpointField)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pointField)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(intersectionField)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 139, Short.MAX_VALUE)
                .add(activeField)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void endpointFieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_endpointFieldItemStateChanged
        MagneticController.setEndPointActive(evt.getStateChange() == ItemEvent.SELECTED);
    }//GEN-LAST:event_endpointFieldItemStateChanged

    private void pointFieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pointFieldItemStateChanged
        MagneticController.setGeodesicPointActive(evt.getStateChange() == ItemEvent.SELECTED);
    }//GEN-LAST:event_pointFieldItemStateChanged

    private void activeFieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_activeFieldItemStateChanged
        boolean flag = evt.getStateChange() == ItemEvent.SELECTED;
        MagneticController.setActivated(evt.getStateChange() == ItemEvent.SELECTED);
        endpointField.setEnabled(flag);
        pointField.setEnabled(flag);
        intersectionField.setEnabled(flag);
    }//GEN-LAST:event_activeFieldItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(dialog != null) {
            dialog.setVisible(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void intersectionFieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_intersectionFieldItemStateChanged
        MagneticController.setIntersectionPointActive(evt.getStateChange() == ItemEvent.SELECTED);
    }//GEN-LAST:event_intersectionFieldItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activeField;
    private javax.swing.JCheckBox endpointField;
    private javax.swing.JCheckBox intersectionField;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox pointField;
    // End of variables declaration//GEN-END:variables
}
