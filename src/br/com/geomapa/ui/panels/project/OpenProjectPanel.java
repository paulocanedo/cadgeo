/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OpenProjectPanel.java
 *
 * Created on 17/05/2011, 10:30:46
 */
package br.com.geomapa.ui.panels.project;

import br.com.geomapa.controller.command.cad.impl.RedrawCommand;
import br.com.geomapa.main.Bus;
import br.com.geomapa.main.DataManagement;
import br.com.geomapa.main.Main;
import br.com.geomapa.project.ProjectMetadata;
import br.com.geomapa.project.ProjectUtils;
import br.com.geomapa.ui.panels.options.OptionsPanel;
import br.com.geomapa.util.UserInterfaceUtil;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author paulocanedo
 */
public class OpenProjectPanel extends javax.swing.JPanel {

    private javax.swing.Timer timer = new javax.swing.Timer(5000, new SearchProjectsListener());

    /** Creates new form OpenProjectPanel */
    public OpenProjectPanel() {
        initComponents();

        projectsList.setModel(new DefaultListModel());
        atualizar();
        timer.start();

        projectsList.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                StringBuilder sb = new StringBuilder();

                ProjectMetadata selected = (ProjectMetadata) projectsList.getSelectedValue();
                if (selected != null) {
                    sb.append("<html>");
                    sb.append("<b>Nome do Imóvel: </b>").append(selected.getNomeImovel()).append("<br />");
                    sb.append("<b>Município: </b>").append(selected.getMunicipio()).append("<br />");
                    sb.append("<b>Unidade Federativa: </b>").append(selected.getUf()).append("<br />");
                    sb.append("<b>Local da pasta: </b>").append(selected.getRootFolder()).append("<br />");
                    sb.append("</html>");
                }
                editorMetadataProject.setText(sb.toString());
                openButton.setEnabled(selected != null);
            }
        });
    }

    private class SearchProjectsListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (isVisible()) {
                atualizar();
            }
        }
    }

    private void atualizar() {
        try {
            int selectedIndex = projectsList.getSelectedIndex();

            DefaultListModel dlm = (DefaultListModel) projectsList.getModel();
            dlm.clear();
            List<ProjectMetadata> listProjects = ProjectUtils.listProjects(OptionsPanel.getProjectDir());
            for (ProjectMetadata pmdata : listProjects) {
                dlm.addElement(pmdata);
            }
            projectsList.setSelectedIndex(selectedIndex < dlm.getSize() ? selectedIndex : -1);
        } catch (IOException ex) {
            Logger.getLogger(OpenProjectPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void openProject(ProjectMetadata selectedProject) {
        long currentTimeMillis = System.currentTimeMillis();
        if (selectedProject != null) {
            ProjectMetadata currentProject = Main.getInstance().getProjectInfo();
            try {
                ProjectUtils.unloadCurrentProject();
                ProjectUtils.loadProject(selectedProject);
                UserInterfaceUtil.hideCurrent();
                UserInterfaceUtil.getTopographicPanel().setPolygonal(DataManagement.getMainPolygonal());
            } catch (Exception ex) {
                Logger.getLogger(OpenProjectPanel.class.getName()).log(Level.SEVERE, null, ex);
                try {
                    ProjectUtils.loadProject(currentProject);
                } catch (Exception ex1) {
                    Logger.getLogger(OpenProjectPanel.class.getName()).log(Level.SEVERE, null, ex1);
                }
                JOptionPane.showMessageDialog(Main.getInstance(), "Falha ao abrir projeto, detalhes: \n\n" + ex.getMessage());
            }
        }
        System.out.println("Demorou " + (System.currentTimeMillis() - currentTimeMillis) + " milisegs para abrir o projeto");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        openButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        projectsList = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        editorMetadataProject = new javax.swing.JEditorPane();
        jPanel3 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 4));

        openButton.setText("Abrir Projeto");
        openButton.setEnabled(false);
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        projectsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        projectsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectsListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(projectsList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
                    .addComponent(openButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(openButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 1));
        jPanel2.setLayout(new java.awt.GridLayout());

        editorMetadataProject.setContentType("text/html");
        editorMetadataProject.setEditable(false);
        jScrollPane2.setViewportView(editorMetadataProject);

        jPanel2.add(jScrollPane2);

        add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 1));
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));
        jPanel3.add(jProgressBar1);

        add(jPanel3, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        ProjectMetadata selectedProject = (ProjectMetadata) projectsList.getSelectedValue();
        openProject(selectedProject);
    }//GEN-LAST:event_openButtonActionPerformed

    private void projectsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectsListMouseClicked
        if (evt.getClickCount() == 2 && SwingUtilities.isLeftMouseButton(evt)) {
            ProjectMetadata selectedProject = (ProjectMetadata) projectsList.getSelectedValue();
            openProject(selectedProject);
        }
    }//GEN-LAST:event_projectsListMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane editorMetadataProject;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton openButton;
    private javax.swing.JList projectsList;
    // End of variables declaration//GEN-END:variables
}
