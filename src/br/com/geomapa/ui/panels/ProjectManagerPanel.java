/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProjectManagerPanel.java
 *
 * Created on 08/11/2011, 11:48:05
 */
package br.com.geomapa.ui.panels;

import br.com.geomapa.geodesic.Polygonal;
import br.com.geomapa.main.DataManagement;
import br.com.geomapa.util.UserInterfaceUtil;
import br.com.geomapa.util.mlist.MacroListAdapter;
import java.io.IOException;

/**
 *
 * @author paulocanedo
 */
public class ProjectManagerPanel extends javax.swing.JPanel implements GeodesicPanel {

    private final PointManagerPanel pointManagerPanel = new PointManagerPanel();
    private final RinexManagerPanel rinexManagerPanel = new RinexManagerPanel();
    private final PortionManagerPanel portionManagerPanel = new PortionManagerPanel();
    private final StatisticsPanel statisticsPanel = new StatisticsPanel();

    /** Creates new form ProjectManagerPanel */
    public ProjectManagerPanel() {
        initComponents();

        customInit();
    }

    private void customInit() {
        centerPanel.add(UserInterfaceUtil.projectDataPanel, "Dados");
        centerPanel.add(pointManagerPanel, "Pontos");
        centerPanel.add(rinexManagerPanel, "Rinex");
        centerPanel.add(portionManagerPanel, "Parcelas");
        centerPanel.add(statisticsPanel, "EstatÃ­sticas");

        DataManagement.getAllPoints().addMacroListListener(new MacroListAdapter() {

            @Override
            public void sizeChanged(int newSize) {
                String s = "Pontos";
                centerPanel.setTitleAt(1, String.format("%s%s", s, newSize > 0 ? String.format(" (%d)", newSize) : ""));
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        centerPanel = new javax.swing.JTabbedPane();

        setLayout(new java.awt.BorderLayout());
        add(centerPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTabbedPane centerPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void filter(String text) {
    }

    @Override
    public String action(String text) {
        return null;
    }

    @Override
    public void refresh() {
        rinexManagerPanel.refresh();
    }

    @Override
    public void setPolygonal(Polygonal polygonal) {
    }

    @Override
    public Polygonal getPolygonal() {
        return null;
    }

    @Override
    public void export(Polygonal polygonal) throws IOException {
    }
}
